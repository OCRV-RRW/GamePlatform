// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package view

import repository "gameplatform/internal/repository"

type ViewConverterImpl struct{}

func (c *ViewConverterImpl) GetGameToGameView(source *repository.GetGame) GameView {
	var viewGameView GameView
	if source != nil {
		var viewGameView2 GameView
		viewGameView2.ID = UuidToString((*source).ID)
		viewGameView2.Title = (*source).Title
		viewGameView2.Description = (*source).Description
		viewGameView2.Src = (*source).Src
		viewGameView2.Icon = (*source).Icon
		viewGameView = viewGameView2
	}
	return viewGameView
}
func (c *ViewConverterImpl) GetGamesToGameViews(source []repository.GetGame) []GameView {
	var viewGameViewList []GameView
	if source != nil {
		viewGameViewList = make([]GameView, len(source))
		for i := 0; i < len(source); i++ {
			viewGameViewList[i] = c.repositoryGetGameToViewGameView(source[i])
		}
	}
	return viewGameViewList
}
func (c *ViewConverterImpl) GetPreviewToPreviewView(source *repository.GetPreview) PreviewView {
	var viewPreviewView PreviewView
	if source != nil {
		var viewPreviewView2 PreviewView
		viewPreviewView2.ID = UuidToString((*source).ID)
		viewPreviewView2.Image = (*source).Image
		if (*source).Video != nil {
			xstring := *(*source).Video
			viewPreviewView2.Video = &xstring
		}
		viewPreviewView = viewPreviewView2
	}
	return viewPreviewView
}
func (c *ViewConverterImpl) GetPreviewsToPreviewViews(source []repository.GetPreview) []PreviewView {
	var viewPreviewViewList []PreviewView
	if source != nil {
		viewPreviewViewList = make([]PreviewView, len(source))
		for i := 0; i < len(source); i++ {
			viewPreviewViewList[i] = c.repositoryGetPreviewToViewPreviewView(source[i])
		}
	}
	return viewPreviewViewList
}
func (c *ViewConverterImpl) repositoryGetGameToViewGameView(source repository.GetGame) GameView {
	var viewGameView GameView
	viewGameView.ID = UuidToString(source.ID)
	viewGameView.Title = source.Title
	viewGameView.Description = source.Description
	viewGameView.Src = source.Src
	viewGameView.Icon = source.Icon
	return viewGameView
}
func (c *ViewConverterImpl) repositoryGetPreviewToViewPreviewView(source repository.GetPreview) PreviewView {
	var viewPreviewView PreviewView
	viewPreviewView.ID = UuidToString(source.ID)
	viewPreviewView.Image = source.Image
	if source.Video != nil {
		xstring := *source.Video
		viewPreviewView.Video = &xstring
	}
	return viewPreviewView
}
